@using FicLibraryMvcPL.Infrastructure
@model FicLibraryMvcPL.Models.BllModels.TextDescriptionViewModel
@{
    ViewBag.Title = Model.Title;
    ViewBag.ShowMoreButton = false;
    var ajaxOptions = new AjaxOptions
    {
        UpdateTargetId = "add-text",
        HttpMethod = "GET",
        LoadingElementId = "preloader"
    };
    var tdEditOptions = new AjaxOptions
    {
        UpdateTargetId = "td-edit",
        HttpMethod = "GET",
        LoadingElementId = "preloader"
    };
    var commentOptions = new AjaxOptions()
    {
        HttpMethod = "GET",
        OnSuccess = "HideCreateButton",
        UpdateTargetId = "add-comment",
        LoadingElementId = "commentpreloader"
    };
    var hasAdminOptions = User.Identity.IsAuthenticated && User.IsInRole("Admin") || User.IsInRole("Owner");
    var hasModeratorOptions = User.Identity.IsAuthenticated && User.IsInRole("Moderator") || hasAdminOptions;
    var isAuthor = User.Identity.IsAuthenticated && Model.Author.ProfileId == (int) Profile["Id"] && !User.IsInRole("Banned");
}

@Html.Partial("_TitlePartial")

<div id="td-edit"></div>

<div class="partial-border">
    <h3>Содержание</h3>
    <ol class="numeric-list square-marker dark-bullet">
        @foreach (var text in Model.Texts)
        {
            <li>
                @Html.ActionLink(text.Subtitle ,"Index", "Text", new {id = text.Id}, new { @class="text ", style="color: black"})
                @if (isAuthor || (hasAdminOptions && ModelHelper.HaveAccessPrivilege(Model.Author.Login, User.Identity.Name)))
                {
                    <a href="@Url.Action("Edit", "Text",  new {id = text.Id})"><span class="icon mif-pencil"></span></a>
                    <a href="@Url.Action("Delete", "Text", new {id = text.Id})"><span class="icon mif-cross"></span></a>
                }
            </li>
        }
    </ol><br>

    <div id="add-text"></div>

    <div class="align-center">
        @if (isAuthor)
        {
            @Ajax.ActionLink("Добавить текст", "Create", "Text", new {titleId = @Model.Id}, ajaxOptions, new {@class = "button success"})
        }
        @if (isAuthor)
        {
            @Ajax.ActionLink("Редактировать публикацию", "Edit", "TextDescription", new { titleId = @Model.Id }, tdEditOptions, new { @class = "button warning" })
        }
        @if (isAuthor || User.IsInRole("Owner"))
        {
            <button class="button danger" onclick="showMetroDialog('#dialog')">Удалить</button>
        }
        <br>
        @(Model.IsPublished
              ? (hasModeratorOptions && ModelHelper.HaveAccessPrivilege(Model.Author.Login, User.Identity.Name))|| isAuthor ? Html.ActionLink("Изъять из опубликованного", "ChangePublicationState", new {textDescId = Model.Id}, new {@class = "button danger"}) : null
              : isAuthor ? Html.ActionLink("Опубликовать", "ChangePublicationState", new {textDescId = Model.Id}, new {@class = "button success"}) : null)

    </div>
    <div class="align-center" id="preloader" data-role="preloader" data-type="metro" data-style="color" style="display: none"></div>
</div>

@if (Model.IsPublished && Model.Comments != null)
{
     <h3 class="align-center">Коментарии</h3>
     if (Model.Comments.ToList().Count == 0)
     {
        <div class="partial-border align-center">
            <h1>
                <small>Похоже, никто не высказал свои впечатления о @Model.Title...</small>
            </h1>
            @if (User.Identity.IsAuthenticated && !User.IsInRole("Banned"))
            {
                @Ajax.ActionLink("Оставьте свое мнение!", "Create", "Comment", new { relation = "TextDescription", objectId = Model.Id, userId = Profile["Id"] }, commentOptions, new { @class = "button success block-shadow-success", id = "show-comment-form" })
                <div class="align-center" id="comment-preloader" data-role="preloader" data-type="metro" data-style="color" style="display: none"></div>
            }
        </div>
     }
     else
     {
         foreach (var e in Model.Comments)
         {
            @Html.Partial("_CommentPartial", e)
         }
         if (User.Identity.IsAuthenticated && !User.IsInRole("Banned"))
         {
            <div class="align-center">
                @Ajax.ActionLink("Оставьте свое мнение!", "Create", "Comment", new { relation = "TextDescription", objectId = Model.Id, userId = Profile["Id"] }, commentOptions, new { @class = "button success block-shadow-success", id = "show-comment-form" })
                <div class="align-center" id="comment-preloader" data-role="preloader" data-type="metro" data-style="color" style="display: none"></div>
            </div>
         }
     }
}

<div id="add-comment"></div>

@if (isAuthor || User.IsInRole("Owner"))
{
    <div data-role="dialog" id="dialog" data-close-button="true" class="padding20 dialog">
        <h1>Вы уверены?</h1>
        <h4>Все изменения и данные будут утеряны!</h4>
        @using (@Html.BeginForm("Delete", "TextDescription", new { }, FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" value="@Model.Id" name="titleId" id="titleId">
            <div class="align-center">
                <input type="submit" value="Удалить" class="button danger block-shadow-danger"/>
            </div>
        }
    </div>
}